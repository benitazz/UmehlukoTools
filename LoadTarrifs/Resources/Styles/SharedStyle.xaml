<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Umehluko.Tools.UI.Converters"
                    xmlns:extensions="clr-namespace:Umehluko.Tools.UI.Extensions"
                    xmlns:ui="clr-namespace:Umehluko.Tools.UI"
                    xmlns:models="clr-namespace:Umehluko.Tools.UI.Models">

    <!--<Style TargetType="{x:Type ToolTip}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="IsOpen" Value="True"/>
        <Setter Property="HasDropShadow" Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border BorderBrush="Gray"
                  BorderThickness="1,1,3,3"
                  Background="LightYellow">
                        <StackPanel Orientation="Horizontal" 
                        Margin="4,0">
                            <Image 
                    Source="../images/error.png"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Height="20"
                    Width="20"
                    Margin="4"
                    ToolTip="{Binding Path=/ErrorContent}">
                            </Image>
                            <ContentPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="Control" x:Key="MyErrorTemplate">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Image 
                  DockPanel.Dock="Left"
                  Source="../images/error.png"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  Height="20"
                  Width="20"
                  Margin="4,0" 
                  ToolTip="{Binding Path=/ErrorContent}">
                        </Image>

                        <Border BorderBrush="Red" 
                    BorderThickness="1"
                    Height="{TemplateBinding Control.Height}">
                            <AdornedElementPlaceholder Name="myControl"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource MyErrorTemplate}">
        <Setter Property="Height" Value="22" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="BorderBrush" Value="#DDDDDD" />
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ComboBox" BasedOn="{StaticResource MyErrorTemplate}">
        <Setter Property="Height" Value="22" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Width" Value="200" />
    </Style>

    <Style TargetType="DatePicker" BasedOn="{StaticResource MyErrorTemplate}">
        <Setter Property="Height" Value="24" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBlock}" >
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Height" Value="22" />
    </Style>

    <ControlTemplate
                  x:Key="ExpanderToggleButton"
                  TargetType="ToggleButton">
        <Border Background="Black">
            <Path 
          Name="Arrow"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z"
          Fill="White" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow"
                        Property="Data"
                        Value="M 0 4 L 4 0 L 8 4 Z" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate> -->

    <!--<Style TargetType="{x:Type UserControl}">
    <Setter 
        Property="Background"
        Value="Green"/>
  </Style>-->

    <!--<Style TargetType="GroupBox">
        <Setter Property="FontFamily" Value="SegoeUI" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding}" Foreground="#FF3B3B3B" FontWeight="DemiBold"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Background" Value="DodgerBlue" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Grid}">
        <Setter Property="Background"
            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    </Style>


    <Style x:Key="TabButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid SnapsToDevicePixels="True">
                        <Path Fill="{TemplateBinding Background}"
                Stretch="Fill"
                Stroke="#FF999999"
                Data="M36.904667,19.333333 C42.238,19.25 36.238,0.5 34.863116,0.5 23.863116,0.5 19.613032,0.5 2.8630319,0.5 -3.2202511,0.5 4.0712139,19.416667 6.5711261,19.416667 15.593514,19.416667 28.609259,19.462949 36.904667,19.333333 z" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid UseLayoutRounding="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="31" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel IsItemsHost="True"
                              Grid.Row="0"
                              Grid.RowSpan="2"
                              Panel.ZIndex="1" />
                        <Border Grid.Row="1"
                            Grid.RowSpan="2"
                            Panel.ZIndex="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Margin="4"
                                          ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TabPanel x:Name="HeaderPanel"
                              Grid.Row="0"
                              Panel.ZIndex="1"
                              Margin="0,0,4,-1"
                              IsItemsHost="True"
                              KeyboardNavigation.TabIndex="1"
                              Background="Transparent" />

                        <Border x:Name="Border"
                            Grid.Row="1"
                            BorderThickness="0,2,0,0"
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2">

                            <Border.Background>
                                <SolidColorBrush Color="White"/>
                            </Border.Background>

                            <Border.BorderBrush>
                                <SolidColorBrush Color="#FF6C7A89"/>
                            </Border.BorderBrush>

                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                          Margin="4"
                                          ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<DataTemplate DataType="{x:Type models:BusyModel}">
        <ui:IsBusyControl/>
    </DataTemplate>-->

    <converters:BooleanToObjectConverter x:Key="BooleanToVisibilityConverter"
                                        TrueStatus="{x:Static Visibility.Visible}"
                                        FalseStatus="{x:Static Visibility.Collapsed}" />



    <DataTemplate x:Key="MainTabItemContentTemplate">
        <Grid>
            <Grid.Resources>
                <!-- Use the proxy frame work on DataGridColumn template, reason being the DataGridColumn template is not part of the visual tree. -->
                <UserControl x:Key="ProxyElement"
                          Content="{Binding  }">
                </UserControl>
            </Grid.Resources>
            <UserControl Content="{Binding}"  Margin="4" x:Name="TabContentw" />
            <!--<ui:IsBusyControl DataContext="{Binding ElementName=TabContentw, Path=Parent.DataContext}" />-->

            <!--<TextBlock Text="Mememem" Visibility="{Binding IsBusy, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged,Source={StaticResource ProxyElement}, Converter={StaticResource BooleanToVisibilityConverter}}" />-->


            <!--<TextBlock Text="Mememem" Visibility="{Binding DataContext.IsBusy, Source={StaticResource ProxyElement}, Converter={StaticResource BooleanToVisibilityConverter}}" />-->
            <!--<TextBlock Text="Mememem" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.IsBusy}" />-->

            <!--<TextBlock Text="Mememem" DataContext="{Binding ElementName=TabContentw,
                                                            Path=DataContext}" Visibility="{Binding ElementName=TabContentw, Path=DataContext.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"  />-->

            <!--<TextBlock Text="Mememem" DataContext="{Binding ElementName=TabContentw, 
                                                            Path=DataContext}" Visibility="{Binding IsBusy, Mode = TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True, NotifyOnTargetUpdated=True , Converter={StaticResource BooleanToVisibilityConverter}}"  />-->

        </Grid>
    </DataTemplate>

    <!--<Style TargetType="{x:Type TabItem}">
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="ContentTemplate" 
                Value="{StaticResource MainTabItemContentTemplate}"/>
    </Style>-->



    <Style TargetType="{x:Type TabItem}">
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="ContentTemplate" 
                Value="{StaticResource MainTabItemContentTemplate}"/>
        <!--<Setter Property="Content" Value="{Binding}"/>-->
        <!--<Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid>
                        <ContentPresenter Content="{TemplateBinding Content}"/>
                        <Grid DataContext="{Binding}">
                            <Grid Background="#B2D3D3D3"
                                          DataContext="{Binding}"
                                          Visibility="{Binding IsBusy, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <StackPanel HorizontalAlignment="Center" 
                                                                    VerticalAlignment="Center">
                                    <TextBlock Text="{Binding ProgressText}"
                                                                        Margin="0,0,0,5" 
                                                                        FontSize="24" 
                                                                        Foreground="Blue"
                                                                        FontWeight="DemiBold"/>
                                    <extensions:ImageExtension Stretch="None" 
                                                                                            GifSource="/Umehluko.Tools.UI;component/Resources/Images/Windows8loader.gif" AutoStart="True"/>
                                </StackPanel>
                            </Grid>

                        </Grid>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border  BorderThickness="0,0,0,2" BorderBrush="#FF6C7A89">
                        <Grid Background="#FFECF0F1">
                            <Border Name="Border" Margin="0,2,0,0" Background="Transparent"
                                     BorderBrush="Gainsboro" BorderThickness="0,0,1,0" >
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              ContentSource="Header" Margin="12,2,12,2"
                                              RecognizesAccessKey="True">
                                </ContentPresenter>
                            </Border>

                            <!--<Grid Background="#B2D3D3D3"
                                          Visibility="{Binding IsBusy, Mode=TwoWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <StackPanel HorizontalAlignment="Center" 
                                                        VerticalAlignment="Center">
                                    <TextBlock Text="{Binding ProgressText}"
                                                            Margin="0,0,0,5" 
                                                            FontSize="24" 
                                                            Foreground="Blue"
                                                            FontWeight="DemiBold"/>
                                    <extensions:ImageExtension Stretch="None" 
                                                                                GifSource="/Umehluko.Tools.UI;component/Resources/Images/Windows8loader.gif" AutoStart="True"/>
                                </StackPanel>
                            </Grid>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF6C7A89" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DarkGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF6C7A89" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>